version: "3.2"
services:    
  react_aspnetcore_production:
    image: vtrifonovdocker/react_aspnetcore:prod-v1
    networks:
      net:
        aliases:
          - react_aspnetcore_production
    container_name: react_aspnetcore_production 
  nginx_host_prod:
    image: vtrifonovdocker/nginx_host:prod-v1
    ports:
      - "46999:80"
      - "46998:8081"              
      - "46997:8082"
    networks:
      - net
    container_name: nginx_host_production
  mongodb:
    image: vtrifonovdocker/mongodb:prod-v1
    networks:
      net:
        aliases:
          - mongo
    env_file: 
      - ./MongoDb/secrets/mongo.env #provides MONGO_INITDB_ROOT_USERNAME and MONGO_INITDB_ROOT_PASSWORD
    volumes:
      - "mongo-production-volume:/data/db"
    container_name: mongo-db
  mongodb_webapi_prod:
    image: vtrifonovdocker/mongodb_webapi:prod-v1
    networks:
      - net
    env_file:
      - ./MongoDbWebApi/secrets/webApiSecrets.prod.env #provides MONGO_DB_WEB_API_CONNECTION_STRING
    container_name: mongodb_webapi_production
  sql_server_webapi_prod:
    image: vtrifonovdocker/sql_server_webapi:prod-v1
    networks:
      - net
    volumes:
      - "./SqlServerWebApi/WebApi:/app/WebApi"
    container_name: sql_server_webapi_production
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
    env_file:
      - ./SqlServerWebApi/secrets/sqlServerWebApiSecrets.prod.env
  sql_server_prod:
    image: vtrifonovdocker/sql_server:prod-v1
    ports:
      - "1433:1433"
    networks:
      - net
    env_file:
      - ./SqlServer/secrets/sqlServerSecrets.prod.env
    volumes:
      - "./SqlServer/createDb:/usr/createDb"
    container_name: sql_server_production
networks:
  net:
volumes:
  mongo-production-volume:  
