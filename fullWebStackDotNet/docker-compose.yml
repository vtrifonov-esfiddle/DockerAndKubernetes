version: "3.2"
services:    
  react:
    build:
      context: ./test-react
    image: vtrifonovdocker/test_react:v1
    ports:
      - "3000:3000"
    networks:
      - net
    volumes: 
      - "C:/GithubRepos/DockerAndKubernetes/fullWebStackDotNet/test-react:/app/"
    environment:
      - NODE_ENV=dev
    container_name: react-v1
  react_aspnetcore_development:
    build:
      context: ./AspNetCore
      dockerfile: development.Dockerfile
    image: vtrifonovdocker/react_aspnetcore:dev-v1
    ports:
      - "5000:80"
    networks:
      - net
    volumes: 
      - type: bind 
        source: ./AspNetCore 
        target: /app
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - NODE_ENV=development      
      - CHOKIDAR_USEPOLLING=true
    container_name: react_aspnetcore_development
  react_aspnetcore_production:
    build:
      context: ./AspNetCore
      dockerfile: production.Dockerfile
    image: vtrifonovdocker/react_aspnetcore:prod-v1
    ports:
      - "45000:80"
    networks:
      - net
    volumes:       
      - "webserver-production-volume:/app"
    container_name: react_aspnetcore_production 
  nginx_host:
    build:
      context: ./AspNetCore
      dockerfile: nginx.Dockerfile
    image: vtrifonovdocker/nginx_host:prod-v1
    ports:
      - "9999:80"
    networks:
      - net
    container_name: nginx_host_production
networks:
  net:
volumes:
  webserver-production-volume:  
